[{"/Users/kerlee.yap/tmp/recipe-book/src/steps.js":"1","/Users/kerlee.yap/tmp/recipe-book/src/recipe.js":"2","/Users/kerlee.yap/tmp/recipe-book/src/ingredients.js":"3","/Users/kerlee.yap/tmp/recipe-book/src/index.js":"4","/Users/kerlee.yap/tmp/recipe-book/src/reportWebVitals.js":"5","/Users/kerlee.yap/tmp/recipe-book/src/recipe-db.js":"6","/Users/kerlee.yap/tmp/recipe-book/src/focusable.js":"7","/Users/kerlee.yap/tmp/recipe-book/src/header.js":"8","/Users/kerlee.yap/tmp/recipe-book/src/App.js":"9"},{"size":852,"mtime":1640671019916,"results":"10","hashOfConfig":"11"},{"size":5146,"mtime":1616974183430,"results":"12","hashOfConfig":"13"},{"size":638,"mtime":1640672509487,"results":"14","hashOfConfig":"15"},{"size":500,"mtime":1640670874027,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":1611012826418,"results":"17","hashOfConfig":"11"},{"size":8593,"mtime":1640670882722,"results":"18","hashOfConfig":"15"},{"size":261,"mtime":1640672696338,"results":"19","hashOfConfig":"15"},{"size":135,"mtime":1640672657488,"results":"20","hashOfConfig":"15"},{"size":223,"mtime":1616971863674,"results":"21","hashOfConfig":"15"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"yhk085",{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},"s7or7d",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"pczxfe",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":8,"warningCount":0,"fixableErrorCount":8,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":10,"warningCount":0,"fixableErrorCount":8,"fixableWarningCount":0,"source":null},"/Users/kerlee.yap/tmp/recipe-book/src/steps.js",[],"/Users/kerlee.yap/tmp/recipe-book/src/recipe.js",["41"],"import React, { useEffect, useState, useRef } from \"react\";\nimport SpeechRecognition, {\n  useSpeechRecognition,\n} from \"react-speech-recognition\";\nimport { Ingredients } from \"./ingredients\";\nimport { Steps } from \"./steps\";\n\nlet wakeLock = null;\n\nconst stayAwake = async () => {\n\n  const requestWakeLock = async () => {\n    try {\n      wakeLock = await navigator.wakeLock.request('screen');\n      console.log('Screen Wake Lock is active');\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  await requestWakeLock();\n}\n\nconst startListening = () => {\n  stayAwake();\n  SpeechRecognition.startListening({ continuous: true });\n}\n\nconst stopListening = async () => {\n  wakeLock.release()\n  .then(() => {\n    wakeLock = null;\n  });\n  SpeechRecognition.stopListening();\n}\nconst Recipe = ({ recipe }) => {\n  const { ingredients, title, steps } = recipe;\n  const [message, setMessage] = useState(\"\");\n  const [currentStep, setStep] = useState(0);\n  const [focusedId, setFocusId] = useState();\n  const refEl = useRef(null);\n  useEffect(() =>\n    refEl && refEl.current ? refEl.current.scrollIntoView() : null\n  );\n  useEffect(() => stayAwake());\n\n  const SECTION = {\n    STEP: \"step\",\n    INGREDIENT: \"ingredient\",\n  };\n\n  const setFocus = (section, key) => {\n    setFocusId(`${section}-${key}`);\n  };\n\n  const goToStep = (stepNumber) => {\n    console.log('go to step:', `'${stepNumber}'`, Number(stepNumber));\n    setStep(Number(stepNumber));\n    setFocus(SECTION.STEP, stepNumber);\n  };\n\n  const goToIngredient = (ingredient) => {\n    setFocus(SECTION.INGREDIENT, ingredient)\n  }\n\n  const commands = [\n    {\n      command: \"Go to *\",\n      // command: [\"Step *\", \"Top *\", \"Stop *\"],\n      callback: goToStep,\n      // isFuzzyMatch: true,\n      // fuzzyMatchingThreshold: 0.2,\n      // bestMatchOnly: true,\n    },\n    {\n      command: \"Step *\",\n      // command: [\"Step *\", \"Top *\", \"Stop *\"],\n      callback: goToStep,\n      // isFuzzyMatch: true,\n      // fuzzyMatchingThreshold: 0.2,\n      // bestMatchOnly: true,\n    },\n    {\n      command: \"Stop *\",\n      callback: goToStep,\n    },\n    {\n      command: \"Top *\",\n      // command: [\"Step *\", \"Top *\", \"Stop *\"],\n      callback: goToStep,\n      // isFuzzyMatch: true,\n      // fuzzyMatchingThreshold: 0.2,\n      // bestMatchOnly: true,\n    },\n    {\n      command: \"How much *\",\n      callback: goToIngredient,\n    },\n    {\n      command: \"How many *\",\n      callback: goToIngredient,\n    },\n    {\n      command: [\"next\", \"okay\"],\n      callback: () => goToStep(currentStep + 1),\n      isFuzzyMatch: true,\n      fuzzyMatchingThreshold: 0.2,\n      bestMatchOnly: true,\n    },\n    {\n      command: [\"back\",],\n      callback: () => goToStep(currentStep - 1),\n      isFuzzyMatch: true,\n      fuzzyMatchingThreshold: 0.2,\n      bestMatchOnly: true,\n    },\n    // {\n    //   command: \"The weather is :condition today\",\n    //   callback: (condition) => setMessage(`Today, the weather is ${condition}`),\n    // },\n    // {\n    //   command: \"My top sports are * and *\",\n    //   callback: (sport1, sport2) => setMessage(`#1: ${sport1}, #2: ${sport2}`),\n    // },\n    // {\n    //   command: \"Pass the salt (please)\",\n    //   callback: () => setMessage(\"My pleasure\"),\n    // },\n    // {\n    //   command: [\"Hello\", \"Hi\"],\n    //   callback: ({ command }) => setMessage(`Hi there! You said: \"${command}\"`),\n    //   matchInterim: true,\n    // },\n    // {\n    //   command: \"Beijing\",\n    //   callback: (command, spokenPhrase, similarityRatio) =>\n    //     setMessage(\n    //       `${command} and ${spokenPhrase} are ${similarityRatio * 100}% similar`\n    //     ),\n    //   // If the spokenPhrase is \"Benji\", the message would be \"Beijing and Benji are 40% similar\"\n    //   isFuzzyMatch: true,\n    //   fuzzyMatchingThreshold: 0.2,\n    // },\n    // {\n    //   command: [\"eat\", \"sleep\", \"leave\"],\n    //   callback: (command) => setMessage(`Best matching command: ${command}`),\n    //   isFuzzyMatch: true,\n    //   fuzzyMatchingThreshold: 0.2,\n    //   bestMatchOnly: true,\n    // },\n    {\n      command: \"clear\",\n      callback: ({ resetTranscript }) => resetTranscript(),\n    },\n  ];\n\n  const { transcript } = useSpeechRecognition({ commands });\n\n  if (!SpeechRecognition.browserSupportsSpeechRecognition()) {\n    return <p>Your browser doesn't support this</p>;\n  }\n\n\n\n  return (<>\n    <div class=\"two-col\">\n      <div class=\"side\">\n        <h2>{title}</h2>\n        <Ingredients\n          refEl={refEl}\n          focusedId={focusedId}\n          ingredients={ingredients}\n        />\n        <Steps\n          refEl={refEl}\n          focusedId={focusedId}\n          steps={steps}\n        />\n      </div>\n      <div class=\"side\">\n        <button\n          onClick={startListening}\n        >\n          Start\n        </button>\n        <button onClick={stopListening}>Stop</button>\n        <button onClick={() => goToStep(currentStep + 1)}>Step</button>\n        <button onClick={() => goToIngredient('eggs')}>Ingredient</button>\n        <p>Current step: {currentStep}</p>\n        <p>{message}</p>\n        <p>TRANSCRIPT: {transcript}</p>\n      </div>\n    </div>\n    </>\n  );\n};\nexport default Recipe;\n","/Users/kerlee.yap/tmp/recipe-book/src/ingredients.js",[],"/Users/kerlee.yap/tmp/recipe-book/src/index.js",[],"/Users/kerlee.yap/tmp/recipe-book/src/reportWebVitals.js",["42","43","44","45","46","47","48","49"],"/Users/kerlee.yap/tmp/recipe-book/src/recipe-db.js",[],"/Users/kerlee.yap/tmp/recipe-book/src/focusable.js",[],"/Users/kerlee.yap/tmp/recipe-book/src/header.js",[],"/Users/kerlee.yap/tmp/recipe-book/src/App.js",["50","51","52","53","54","55","56","57","58","59"],{"ruleId":"60","severity":1,"message":"61","line":38,"column":19,"nodeType":"62","messageId":"63","endLine":38,"endColumn":29},{"ruleId":"64","severity":2,"message":"65","line":4,"column":26,"nodeType":"66","messageId":"67","endLine":4,"endColumn":27,"fix":"68"},{"ruleId":"64","severity":2,"message":"65","line":5,"column":26,"nodeType":"66","messageId":"67","endLine":5,"endColumn":27,"fix":"69"},{"ruleId":"64","severity":2,"message":"65","line":6,"column":26,"nodeType":"66","messageId":"67","endLine":6,"endColumn":27,"fix":"70"},{"ruleId":"64","severity":2,"message":"65","line":7,"column":26,"nodeType":"66","messageId":"67","endLine":7,"endColumn":27,"fix":"71"},{"ruleId":"64","severity":2,"message":"65","line":8,"column":27,"nodeType":"66","messageId":"67","endLine":8,"endColumn":28,"fix":"72"},{"ruleId":"64","severity":2,"message":"65","line":9,"column":7,"nodeType":"66","messageId":"67","endLine":9,"endColumn":8,"fix":"73"},{"ruleId":"64","severity":2,"message":"65","line":11,"column":2,"nodeType":"74","messageId":"67","endLine":11,"endColumn":3,"fix":"75"},{"ruleId":"64","severity":2,"message":"65","line":13,"column":31,"nodeType":"76","messageId":"67","endLine":13,"endColumn":32,"fix":"77"},{"ruleId":"64","severity":2,"message":"65","line":1,"column":19,"nodeType":"78","messageId":"67","endLine":1,"endColumn":20,"fix":"79"},{"ruleId":"64","severity":2,"message":"65","line":2,"column":33,"nodeType":"78","messageId":"67","endLine":2,"endColumn":34,"fix":"80"},{"ruleId":"81","severity":2,"message":"82","line":3,"column":8,"nodeType":"78","messageId":"83","endLine":3,"endColumn":9,"fix":"84"},{"ruleId":"81","severity":2,"message":"85","line":3,"column":16,"nodeType":"78","messageId":"86","endLine":3,"endColumn":17,"fix":"87"},{"ruleId":"64","severity":2,"message":"65","line":3,"column":39,"nodeType":"78","messageId":"67","endLine":3,"endColumn":40,"fix":"88"},{"ruleId":"89","severity":2,"message":"90","line":4,"column":13,"nodeType":"91","messageId":"92","endLine":4,"endColumn":14,"fix":"93"},{"ruleId":"94","severity":2,"message":"95","line":6,"column":5,"nodeType":"96","endLine":6,"endColumn":26},{"ruleId":"94","severity":2,"message":"95","line":7,"column":7,"nodeType":"96","endLine":7,"endColumn":36},{"ruleId":"64","severity":2,"message":"65","line":9,"column":4,"nodeType":"97","messageId":"67","endLine":9,"endColumn":5,"fix":"98"},{"ruleId":"64","severity":2,"message":"65","line":12,"column":19,"nodeType":"76","messageId":"67","endLine":12,"endColumn":20,"fix":"99"},"no-unused-vars","'setMessage' is assigned a value but never used.","Identifier","unusedVar","semi","Extra semicolon.","ExpressionStatement","extraSemi",{"range":"100","text":"101"},{"range":"102","text":"103"},{"range":"104","text":"105"},{"range":"106","text":"107"},{"range":"108","text":"109"},{"range":"110","text":"111"},"VariableDeclaration",{"range":"112","text":"113"},"ExportDefaultDeclaration",{"range":"114","text":"115"},"ImportDeclaration",{"range":"116","text":"117"},{"range":"118","text":"119"},"object-curly-spacing","A space is required after '{'.","requireSpaceAfter",{"range":"120","text":"121"},"A space is required before '}'.","requireSpaceBefore",{"range":"122","text":"121"},{"range":"123","text":"124"},"space-before-function-paren","Missing space before function parentheses.","FunctionDeclaration","missingSpace",{"range":"125","text":"121"},"react/react-in-jsx-scope","'React' must be in scope when using JSX","JSXOpeningElement","ReturnStatement",{"range":"126","text":"127"},{"range":"128","text":"129"},[202,217],")\n      getFID",[229,244],")\n      getFCP",[256,271],")\n      getLCP",[283,299],")\n      getTTFB",[311,319],")\n    }",[319,325],")\n  }",[326,336],"}\n\nexport",[345,361],"reportWebVitals",[7,26],"'./App.css'\nimport",[39,60],"'./recipe.js'\nimport",[62,62]," ",[69,69],[76,102],"'./recipe-db.js'\nfunction",[106,106],[197,201],")\n}",[218,222],"App"]
